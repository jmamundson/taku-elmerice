! seems to crash if bed gets too deep -- water pressure too high
!check keywords warn
echo on
!
! working units are MPa, a, m
!
! THIS IS THE PARAMETER SPACE:
!-----------------------------
! the inflow velocity at X=0 in m/a
#U0 = 0.0

!-----------------------------
!
! derived parameter
! working units are MPa, a, m
!
#yearinsec = 365.25*24.0*60.0*60.0
#rhoi = 910.0/(1.0e6*yearinsec^2)
#rhow = 1030.0/(1.0e6*yearinsec^2)
#rhof = 1000.0/(1.0e6*yearinsec^2)

#gravity = -9.81*yearinsec^2

! sea level
#sl0 = 0.0

! the timestep
#dt = 10.0/365.25
#tspan = 1000.0
#tout = 1000.0 

! parameters for mass balance profile; using # to define LUA variables.
! B = dBdz * (z - 1/(2*k)*np.log(1 + np.exp(2*k*(z-zthreshold))))
#dBdz = 0.01 ! mass balance gradient {a^-1}
#Bmax = 5 ! maximum mass balance rate {m a^-1}
#ELA = 800 ! equilibrium line altitude {m}
#k = 0.005 ! smoothing parameter
#zthreshold = Bmax/dBdz+ELA
#Bsl = -8 ! mass balance rate at sea level {m a^-1}
    

! parameters needed for lateral friction; see Gagliardini et al. (2010)
#Afactor = 75.0 ! for 0 C  [MPa^{-3}a^{-1}]; see Cuffey and Paterson
#n = 3.0
#etai = 1.0/(2*Afactor)^(1.0/n)
#W = 2.5e3 ! half width [m]
#Kspring = etai * (n+1)^(1/n) / (rhoi * W^(1+(1/n)))

! parameters needed for Coulomb friction
#beta = 0.02
#As = beta^(-n)


$namerun = "inttest" 

$ function tangentialupdate(X) import dt{\
   _tangentialupdate = X(0) + X(1) * dt;\
}

Header
  Mesh DB "." "line"
  Results Directory "./results"
End

Constants
  Water Density = Real #rhow
  Rho = Real #rhoi
  g = Real #gravity
  Sea Level = Real #sl0

End

!---------------------------------------------------
!---------------- SIMULATION -----------------------
!---------------------------------------------------

Simulation
  Coordinate System  = Cartesian 2D
  Simulation Type = Steady

!  Timestepping Method = "bdf"
!  BDF Order = 1
!  Timestep Intervals = #tspan
  Output Intervals = 1
!  Timestep Sizes = #dt

  Initialize Dirichlet Conditions = Logical False
  Steady State Max Iterations = 1
  Steady State Min Iterations = 1

  Output File = "$namerun$.result" !"
  Post File = "$namerun$.vtu"
  max output level = 20

 End

!---------------------------------------------------
!---------------- BODIES ---------------------------
!---------------------------------------------------

! the ice
Body 1
  Name = "ice"
  Equation = 1
  Material = 1
End

! The upper surface
Body 2
  Name= "top free surface"
  Equation = 2
  Material = 1
  Body Force = 1
  Initial Condition = 1
End

!---------------------------------------------------
!---------------- INITIAL CONDITIONS ---------------
!---------------------------------------------------
!! for ice
Initial Condition 1
!  ToBeIntegrated = Opposes Coordinate 1
 ToBeIntegrated = Variable Coordinate 1
    Real MATC "3.0*(tx(0)>0)*tx(0)*tx(0)"
End

!---------------------------------------------------
!---------------- BODY FORCES ----------------------
!---------------------------------------------------

Body Force 1
   !ToBeIntegrated = Opposes Coordinate 1 
   ToBeIntegrated = Variable Coordinate 1
    Real MATC "3.0*(tx(0)>0)*tx(0)*tx(0)"
End


!---------------------------------------------------
!---------------- MATERIALS ------------------------
!---------------------------------------------------

!! ice material properties in MPa - m - a system
Material 1
  Density = Real #rhoi

  Viscosity Model = String "Glen"
  ! Viscosity has to be set to a dummy value
  ! to avoid warning output from Elmer
  Viscosity = Real 1.0
  Glen Exponent = Real 3.0
  Critical Shear Rate = Real 1.0e-10
  ! Rate factors (Paterson value in MPa^-3a^-1)
  ! old values
  !Rate Factor 1 = Real 1.258e13
  !Rate Factor 2 = Real 6.046e28
  !Rate Factor 1 = Real 9.120e12
  !Rate Factor 2 = Real 7.669e23

  ! these are in SI units - no problem, as long as
  ! the gas constant also is

  ! old values
  !Activation Energy 1 = Real 60e3
  !Activation Energy 2 = Real 139e3
  !Activation Energy 1 = Real 60e3
  !Activation Energy 2 = Real 115e3
  Set Arrhenius Factor = Logical True
  Arrhenius Factor = Real 75.0
  
  Glen Enhancement Factor = Real 1.0
  Constant Temperature = Real 0.0

  Sea Level = Real #sl0

  !Min Zs Top = Variable "Zs Bottom"
  !  Real MATC "tx + 10.0"
  !Max Zs Top = Real 1.0e6

  !! Bed condition
  ! Min Zs Bottom = Equals "bedrock"
  !Min Zs Bottom = Variable Coordinate 1
  !  Real Procedure "./"$bed_func" ""initbedrock"

  !Max Zs Bottom = Real 1.0e6
End

!---------------------------------------------------
!---------------- SOLVERS --------------------------
!---------------------------------------------------

Solver 1
   Equation = "Flowdepth"
   Exec Solver = "Before Timestep"
   Procedure = File "ElmerIceSolvers" "FlowDepthSolver"
   Variable = String "Depth"
   Variable DOFs = 1
   Linear System Solver = "Direct"
   Linear System Direct Method = "MUMPS"
   ! this sets the direction
   ! -1 is negative z-direction (upside down)
   ! +1 is positive (downside up)
   Gradient = Real -1.0E00
  ! switch that to True, if you want to have
  ! free surface gradients to be computed
  !------------------------------------
  Calc Free Surface = Logical False
  ! the name for the exported (if not existing) added variable
  ! the gradients will be stored in variables with the base
  ! name given and "Grad1" and (in 3 dimensions) "Grad2" added,
  ! so in our case "FreeSurfGrad1" and "FreeSurfGrad2"
  ! again, if those variables did not exist, they will be
  ! automatically created
  !-----------------------------------------------------------
  !Freesurf Name = String "FreeSurf"
End

Solver 2
  Equation = "BalanceFlux"
  Procedure = File "integrate" "integrate"
  Exec Solver = "After Timestep"
  Variable = "IntegratedValue"
  Exported Variable 1 = -dofs 1 "ToBeIntegrated"
  Linear System Solver = "Direct"
  Linear System Direct Method = "MUMPS"
End

Solver 3
  Exec Solver = "After Timestep"
!  StructuredProjectToPlane: used to compute integrated viscosity and density
!   thickness will also be used to compute mean viscosity and density
  Equation = "Projector"
  Procedure = "StructuredProjectToPlane" "StructuredProjectToPlane"
  Active Coordinate = Integer 2
  Operator 1 = thickness
  Variable 2 = "IntegratedValue"
  Operator 2 = "top"
  Project to Everywhere = Logical True
End

!---------------------------------------------------
!---------------- EQUATIONS ------------------------
!---------------------------------------------------

Equation 1 ! for glacier bulk
  Active Solvers(2) = 1 3
End

Equation 2 ! for free surface
  Active Solvers(1) = 2
  Convection = String Computed
End


!---------------------------------------------------
!---------------- BOUNDARY CONDITIONS --------------
!---------------------------------------------------

!! BC  Bedrock + Shelf
Boundary Condition 1
  Name = "bottom"
  Target Boundaries = 3
  Height = Real 0.0
End

!! BC Glacier terminus
Boundary Condition 2
  Name = "front"
  Target Boundaries = 1
  IntegratedValue = Real 0.0
End


!! BC  Free surface Top
Boundary Condition 3
  Name = "top"
  Target Boundaries = 4
  Body Id = 2
  ! What do these lines do???
  Depth = Real 0.0
End

!! BC Ice divide
Boundary Condition 4
  Name = "back"
  Target Boundaries = 2
End


